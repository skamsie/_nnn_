*nnn.txt*  News in Vim ⁽(◍˃̵͈̑ᴗ˂̵͈̑)⁽

Author:  skamsie
Website: https://github.com/skamsie/nnn

===============================================================================
CONTENTS                                         *nnn*

1. Introduction .................................|nnn-intro|
2. Requirements .................................|nnn-requirements|
3. Usage ........................................|nnn-usage|
4. Configuration.................................|nnn-configuration|
5. Colors........................................|nnn-colors|
6. Troubleshooting...............................|nnn-troubleshooting|
7. About.........................................|nnn-about|
===============================================================================


INTRODUCTION                                     *nnn-intro*

A vim plugin that shows the latest news headlines. The content is
based on https://newsapi.org.


REQUIREMENTS                                     *nnn-requirements*

* Vim compiled with python or python3 support.
* An api key for newsapi.org (https://newsapi.org/register). It is free for non
  commercial use.
* Add the following line to your .bashrc or .zshrc and reload the terminal
  `export VIM_NEWS_API_KEY=<your_api_key>`


USAGE                                            *nnn-usage*

The main command `:NNN` or its alias `:News` is used to load the news
content in a new buffer.

Without any arguments:
It uses the configuration to look for articles. See CONFIGURATION below.

With arguments:
You can pass sources and topics as arguments, and the results will be returned
based on them instead of the variables configured in your .vimrc. You can pass
both sources and topics separated by commas.

Sources are the source ids from newsapi.org. Use `S` to show all sources or
check the api documentation.

Topics have to start with a `/` and consist of a string of one word or more words
separated by whitespace. The language of the results as well as the desired
sorting algorithm can be specified by using `:` and the language abbreviation,
followed by `:` and the sorting type. They are however optional and if not
specified the defaults will be used (see CONFIGURATION for defaults)

EXAMPLES:~
Search for articles from cnn only:
`:NNN cnn`

Search for multiple topics:
`:NNN /vim, /bitcoin:en:popularity, /climate change::relevancy`

Search sources and topics:
`:NNN bbc-news, /bitcoin:en:popularity`

NOTES:~
The sources accept no parameters as they are simply publication names.
<400 Bad Request> from newsapi probably means an error with the format of your
parameters or config.

BUFFER COMMANDS:~
* `O` Open the article in browser (while cursor is on title or description)
* `F` Folds or unflods the articles under the current source
* `S` Show all possible news sources
* `<CR>` While on the top index bar, goes to the corresponding section


CONFIGURATION                                    *nnn-configuration*

Global variables that can be configured in .vimrc or locally.

`g:nnn_sources`
    - set the desired sources for the articles (max 20 sources)
    - the values must be separated by comma
    - can be disabled with `let g:nnn_sources=""`

    example: `let g:nnn_sources='cnn, bbc-news, wired'`
    documentation: https://newsapi.org/sources

`g:nnn_topics`
    - set the desired topics
    - variable is not set by default
    - it is used to search articles by topic instead of source

    example:
      `let g:nnn_topics =`
      `    \ [ {'topic': 'programming languages', 'language': 'en'},`
      `    \   {'topic': 'angela merkel', 'language': 'de'},`
      `    \   {'topic': 'apple', 'sort_by': 'popularity'}`
      `    \ ]`
    documentation: https://newsapi.org/docs/endpoints/everything

`g:nnn_wrap_text`
    - where to wrap text (integer)
    - default is 120

`g:nnn_show_published_at` (1 or 0)
    - if 0, does not show when the article was published
    - default is 1

`g:nnn_default_topic_lang`
    - default language for topics
    - it is set to empty string by default

`g:nnn_default_topic_sort`
    - default sortBy for topics
    - it is set to "relevancy" by default

`g:nnn_limit_topics_at`
    - maximum number of articles per topic to show
    - default is 10

`g:nnn_nomodifiable`
    - set to 1 to make buffer modifiabe by default
    - default is 0

`g:nnn_disable_threading`
    - warning: makes things slow
    - if for some reason you want the topics request to happen one after
      the other instead of in parallel, set this to 1

`g:nnn_browser`
    - if not set, the default browser will be used
    - eg: 'firefox', 'safari', etc.


COLORS                                           *nnn-colors*

The plugin tries to match the syntax to your current colorscheme. However,
if needed, the highlights can be overwritten. Just drop something like the
following in your .vimrc:

`function! SetNHColors()`
  `hi NHSource ctermfg=1 ctermbg=8 guifg=#E12672 guibg=#565656`
  `hi link NHLink Statement`
`endfunction`

`au! BufEnter,ColorScheme *.nnn call SetNHColors()`

See more in syntax/nnn.vim


TROUBLESHOOTING                                  *nnn-troubleshooting*

The errors are not very graceful and if you get one of the following, it's
coming directly from newsapi.org:

`HTTP Error 401: Unauthorized` - probably your api key is not set or incorrect
`HTTP Error 400: Bad Request`  - check your `g:nnn_sources` var or command params


ABOUT                                            *nnn-about*

https://github.com/skamsie/nnn

vim:ft=help
